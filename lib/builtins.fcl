sig mapPull : (a -> b) -> [a] -> [b]
fun mapPull f arr = #mapPull f arr

sig mapPush : (a -> b) -> [a]<lvl> -> [b]<lvl>
fun mapPush f arr = #mapPush f arr

sig generatePull : int -> (int -> a) -> [a]
fun generatePull n f = #generatePull n f

sig lengthPull : [a] -> int
fun lengthPull arr = #lengthPull arr

sig lengthPush : [a]<lvl> -> int
fun lengthPush arr = #lengthPush arr

sig addi : int -> int -> int
fun addi x y = #addi x y

sig subi : int -> int -> int
fun subi x y = #subi x y

sig divi : int -> int -> int
fun divi x y = #divi x y

sig muli : int -> int -> int
fun muli x y = #muli x y

sig modi : int -> int -> int
fun modi x y = #modi x y

sig powi : int -> int -> int
fun powi x y = #powi x y

sig shiftLi : int -> int -> int
fun shiftLi x y = #shiftLi x y

sig shiftRi : int -> int -> int
fun shiftRi x y = #shiftRi x y

sig andi : int -> int -> int
fun andi x y = #andi x y

sig ori : int -> int -> int
fun ori x y = #ori x y

sig xori : int -> int -> int
fun xori x y = #xori x y

sig divr : double -> double -> double
fun divr x y = #divr x y

sig negatei : int -> int
fun negatei b = #negatei b

sig i2d : int -> double
fun i2d x = #i2d x

sig b2i : bool -> int
fun b2i b = #b2i b

sig clz : int -> int
fun clz b = #clz b

sig index : [a] -> int -> a
fun index arr i = #index arr i

sig mini : int -> int -> int
fun mini x y = #mini x y

sig eqi : int -> int -> bool
fun eqi x y = #eqi x y

sig neqi : int -> int -> bool
fun neqi x y = #neqi x y

sig fst : (a, b) -> a
fun fst x = #fst x

sig snd : (a, b) -> b
fun snd x = #snd x

sig while : ([a] -> bool) -> ([a] -> [a]<lvl>) -> [a]<lvl> -> [a]
fun while cond step x = #while cond step x

sig whileSeq : (a -> bool) -> (a -> a) -> a -> a
fun whileSeq cond step x = #whileSeq cond step x

-- sig concat : int -> [[a]<lvl>] -> [a]<1+lvl>
-- fun concat n arr = #concat n arr

sig assemble : int -> ((int, int) -> int) -> [[a]<lvl>] -> [a]<1+lvl>
fun assemble n ixf arr = #assemble n ixf arr

sig concat : int -> [[a]<lvl>] -> [a]<1+lvl>
fun concat n arr =
  assemble n (fn sh => addi (muli (fst sh) n) (snd sh)) arr

sig force : [a]<lvl> -> [a]
fun force x = #force x

-- sig push : [a] -> [a]<lvl>
-- fun push x = #push x

sig scanl : (a -> b -> a) -> a -> [b] -> [a]<thread>
fun scanl op init xs = #scanl op init xs
