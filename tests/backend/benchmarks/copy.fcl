sig genInput : Program <grid> [int]<grid>
val genInput =
  splitUp 256 (generate (4096 * 4096) (fn i => i))
    |> mapPull (fn arr => return <block> (push <block> arr))
    |> concat <block> 256

sig copy : forall 'a. ['a] -> Program <grid> ['a]<grid>
fun copy arr =
  splitUp 256 arr
   |> mapPull (fn arr => return <block> (push <block> arr))
   |> concat <block> 256

sig main : Program <grid> unit
val main =
 do <grid>
  { input <- (bind <grid> genInput (force <grid>))
  ; arr <- copy input
  ; forceAndPrint 100 arr
  ; benchmark 100 (bind <grid> (copy input) (force <grid>))
  }
