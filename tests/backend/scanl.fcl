sig scanBlock : [int] -> Program <block> [int]<block>
fun scanBlock arr =
  splitUp 32 arr
   |> mapPull (scanl (fn a => fn b => a + b) 0)
   |> mapPull (return <thread>)
   |> concat <thread> 33

sig runtest : Program <grid> [int]<grid>
val runtest =
  generate 1 (fn i => iota (32*32))
   |> mapPull scanBlock
   |> concat <block> (33*32)

sig main : Program <grid> [int]
val main =
  do <grid>
    { a <- runtest
    ; forceAndPrint (33*32) a
    }
