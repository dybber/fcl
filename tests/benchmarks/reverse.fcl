sig reverse : forall 'a. ['a] -> ['a]
fun reverse arr =
  let n = lengthPull arr
  in generate n (fn i => index arr (n - i - 1))

sig simpleReverse : forall 'a. int -> ['a] -> Program <grid> ['a]<grid>
fun simpleReverse splitSize arr =
  splitUp splitSize arr
   |> mapPull reverse
   |> mapPull (pushM <block>)
   |> reverse
   |> concat <block> splitSize

sig main : Program <grid> unit
val main =
 do <grid>
  { input <- generateInput (4096*4096)
  ; arr <- simpleReverse 256 input
  ; forceAndPrint 100 arr
  ; benchmark 100 (forceM<grid> (simpleReverse 256 input))
  }
